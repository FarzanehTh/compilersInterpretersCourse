MiniCProg [syslibFlag=1] (1, 0)
|-VarDecl (3, 0)
  |-TypeReference: [val=int] (3, 0)
  |-VarRef (3, 4)
    |-Identifier [name=N] (3, 4)
|-VarDecl (4, 0)
  |-TypeReference: [val=int] (4, 0)
  |-VarRef (4, 4)
    |-Identifier [name=a] (4, 4)
    |-IntLiteralExpr [val=20] (4, 4)
  |-VarRef (4, 11)
    |-Identifier [name=c] (4, 11)
    |-IntLiteralExpr [val=400] (4, 11)
|-FuncDecl [hasBody=1] (6, 0)
  |-TypeReference: [val=void] (6, 0)
  |-Identifier [name=markcolumn] (6, 5)
  |-Parameter (6, 16)
    |-TypeReference: [val=int] (6, 16)
    |-Identifier [name=x] (6, 20)
  |-Parameter (6, 23)
    |-TypeReference: [val=int] (6, 23)
    |-Identifier [name=y] (6, 27)
  |-Parameter (6, 30)
    |-TypeReference: [val=int] (6, 30)
    |-Identifier [name=mark] (6, 34)
  |-ScopeStatement (6, 40)
    |-VarDecl (7, 4)
      |-TypeReference: [val=int] (7, 4)
      |-VarRef (7, 8)
        |-Identifier [name=i] (7, 8)
    |-ForStmt (8, 4)
      |-AssignmentExpr (8, 9)
        |-VarRef (8, 9)
          |-Identifier [name=i] (8, 9)
        |-IntLiteralExpr [val=0] (8, 13)
      |-BinaryExpr [opcode='<'] (8, 16)
        |-VarExpr (8, 16)
          |-VarRef (8, 16)
            |-Identifier [name=i] (8, 16)
        |-VarExpr (8, 20)
          |-VarRef (8, 20)
            |-Identifier [name=N] (8, 20)
      |-AssignmentExpr (8, 23)
        |-VarRef (8, 23)
          |-Identifier [name=i] (8, 23)
        |-BinaryExpr [opcode='+'] (8, 27)
          |-VarExpr (8, 27)
            |-VarRef (8, 27)
              |-Identifier [name=i] (8, 27)
          |-IntLiteralExpr [val=1] (8, 31)
      |-ExprStmt (9, 8)
        |-AssignmentExpr (9, 8)
          |-VarRef (9, 8)
            |-Identifier [name=c] (9, 8)
            |-BinaryExpr [opcode='+'] (9, 10)
              |-BinaryExpr [opcode='*'] (9, 10)
                |-VarExpr (9, 10)
                  |-VarRef (9, 10)
                    |-Identifier [name=i] (9, 10)
                |-VarExpr (9, 14)
                  |-VarRef (9, 14)
                    |-Identifier [name=N] (9, 14)
              |-VarExpr (9, 18)
                |-VarRef (9, 18)
                  |-Identifier [name=y] (9, 18)
          |-BinaryExpr [opcode='+'] (9, 23)
            |-VarExpr (9, 23)
              |-VarRef (9, 23)
                |-Identifier [name=c] (9, 23)
                |-BinaryExpr [opcode='+'] (9, 25)
                  |-BinaryExpr [opcode='*'] (9, 25)
                    |-VarExpr (9, 25)
                      |-VarRef (9, 25)
                        |-Identifier [name=i] (9, 25)
                    |-VarExpr (9, 29)
                      |-VarRef (9, 29)
                        |-Identifier [name=N] (9, 29)
                  |-VarExpr (9, 33)
                    |-VarRef (9, 33)
                      |-Identifier [name=y] (9, 33)
            |-VarExpr (9, 38)
              |-VarRef (9, 38)
                |-Identifier [name=mark] (9, 38)
|-FuncDecl [hasBody=1] (12, 0)
  |-TypeReference: [val=void] (12, 0)
  |-Identifier [name=markdiag] (12, 5)
  |-Parameter (12, 14)
    |-TypeReference: [val=int] (12, 14)
    |-Identifier [name=x] (12, 18)
  |-Parameter (12, 21)
    |-TypeReference: [val=int] (12, 21)
    |-Identifier [name=y] (12, 25)
  |-Parameter (12, 28)
    |-TypeReference: [val=int] (12, 28)
    |-Identifier [name=mark] (12, 32)
  |-ScopeStatement (12, 38)
    |-VarDecl (13, 4)
      |-TypeReference: [val=int] (13, 4)
      |-VarRef (13, 8)
        |-Identifier [name=i] (13, 8)
    |-ForStmt (14, 4)
      |-AssignmentExpr (14, 9)
        |-VarRef (14, 9)
          |-Identifier [name=i] (14, 9)
        |-IntLiteralExpr [val=0] (14, 13)
      |-BinaryExpr [opcode='<'] (14, 16)
        |-VarExpr (14, 16)
          |-VarRef (14, 16)
            |-Identifier [name=i] (14, 16)
        |-VarExpr (14, 20)
          |-VarRef (14, 20)
            |-Identifier [name=N] (14, 20)
      |-AssignmentExpr (14, 23)
        |-VarRef (14, 23)
          |-Identifier [name=i] (14, 23)
        |-BinaryExpr [opcode='+'] (14, 27)
          |-VarExpr (14, 27)
            |-VarRef (14, 27)
              |-Identifier [name=i] (14, 27)
          |-IntLiteralExpr [val=1] (14, 31)
      |-ScopeStatement (14, 34)
        |-VarDecl (15, 8)
          |-TypeReference: [val=int] (15, 8)
          |-VarRef (15, 12)
            |-Identifier [name=x1] (15, 12)
        |-VarDecl (16, 8)
          |-TypeReference: [val=int] (16, 8)
          |-VarRef (16, 12)
            |-Identifier [name=y1] (16, 12)
        |-ExprStmt (17, 8)
          |-AssignmentExpr (17, 8)
            |-VarRef (17, 8)
              |-Identifier [name=x1] (17, 8)
            |-VarExpr (17, 13)
              |-VarRef (17, 13)
                |-Identifier [name=i] (17, 13)
        |-ExprStmt (18, 8)
          |-AssignmentExpr (18, 8)
            |-VarRef (18, 8)
              |-Identifier [name=y1] (18, 8)
            |-BinaryExpr [opcode='+'] (18, 13)
              |-VarExpr (18, 13)
                |-VarRef (18, 13)
                  |-Identifier [name=y] (18, 13)
              |-BinaryExpr [opcode='-'] (18, 17)
                |-VarExpr (18, 18)
                  |-VarRef (18, 18)
                    |-Identifier [name=i] (18, 18)
                |-VarExpr (18, 22)
                  |-VarRef (18, 22)
                    |-Identifier [name=x] (18, 22)
        |-IfStmt (19, 8)
          |-BinaryExpr [opcode='&&'] (19, 12)
            |-BinaryExpr [opcode='>='] (19, 12)
              |-VarExpr (19, 12)
                |-VarRef (19, 12)
                  |-Identifier [name=y1] (19, 12)
              |-IntLiteralExpr [val=0] (19, 18)
            |-BinaryExpr [opcode='<'] (19, 23)
              |-VarExpr (19, 23)
                |-VarRef (19, 23)
                  |-Identifier [name=y1] (19, 23)
              |-VarExpr (19, 28)
                |-VarRef (19, 28)
                  |-Identifier [name=N] (19, 28)
          |-ExprStmt (20, 12)
            |-AssignmentExpr (20, 12)
              |-VarRef (20, 12)
                |-Identifier [name=c] (20, 12)
                |-BinaryExpr [opcode='+'] (20, 14)
                  |-BinaryExpr [opcode='*'] (20, 14)
                    |-VarExpr (20, 14)
                      |-VarRef (20, 14)
                        |-Identifier [name=x1] (20, 14)
                    |-VarExpr (20, 19)
                      |-VarRef (20, 19)
                        |-Identifier [name=N] (20, 19)
                  |-VarExpr (20, 23)
                    |-VarRef (20, 23)
                      |-Identifier [name=y1] (20, 23)
              |-BinaryExpr [opcode='+'] (20, 29)
                |-VarExpr (20, 29)
                  |-VarRef (20, 29)
                    |-Identifier [name=c] (20, 29)
                    |-BinaryExpr [opcode='+'] (20, 31)
                      |-BinaryExpr [opcode='*'] (20, 31)
                        |-VarExpr (20, 31)
                          |-VarRef (20, 31)
                            |-Identifier [name=x1] (20, 31)
                        |-VarExpr (20, 36)
                          |-VarRef (20, 36)
                            |-Identifier [name=N] (20, 36)
                      |-VarExpr (20, 40)
                        |-VarRef (20, 40)
                          |-Identifier [name=y1] (20, 40)
                |-VarExpr (20, 46)
                  |-VarRef (20, 46)
                    |-Identifier [name=mark] (20, 46)
        |-ExprStmt (21, 8)
          |-AssignmentExpr (21, 8)
            |-VarRef (21, 8)
              |-Identifier [name=y1] (21, 8)
            |-BinaryExpr [opcode='-'] (21, 13)
              |-VarExpr (21, 13)
                |-VarRef (21, 13)
                  |-Identifier [name=y] (21, 13)
              |-BinaryExpr [opcode='-'] (21, 17)
                |-VarExpr (21, 18)
                  |-VarRef (21, 18)
                    |-Identifier [name=i] (21, 18)
                |-VarExpr (21, 22)
                  |-VarRef (21, 22)
                    |-Identifier [name=x] (21, 22)
        |-IfStmt (22, 8)
          |-BinaryExpr [opcode='&&'] (22, 12)
            |-BinaryExpr [opcode='>='] (22, 12)
              |-VarExpr (22, 12)
                |-VarRef (22, 12)
                  |-Identifier [name=y1] (22, 12)
              |-IntLiteralExpr [val=0] (22, 18)
            |-BinaryExpr [opcode='<'] (22, 23)
              |-VarExpr (22, 23)
                |-VarRef (22, 23)
                  |-Identifier [name=y1] (22, 23)
              |-VarExpr (22, 28)
                |-VarRef (22, 28)
                  |-Identifier [name=N] (22, 28)
          |-ExprStmt (23, 12)
            |-AssignmentExpr (23, 12)
              |-VarRef (23, 12)
                |-Identifier [name=c] (23, 12)
                |-BinaryExpr [opcode='+'] (23, 14)
                  |-BinaryExpr [opcode='*'] (23, 14)
                    |-VarExpr (23, 14)
                      |-VarRef (23, 14)
                        |-Identifier [name=x1] (23, 14)
                    |-VarExpr (23, 19)
                      |-VarRef (23, 19)
                        |-Identifier [name=N] (23, 19)
                  |-VarExpr (23, 23)
                    |-VarRef (23, 23)
                      |-Identifier [name=y1] (23, 23)
              |-BinaryExpr [opcode='+'] (23, 29)
                |-VarExpr (23, 29)
                  |-VarRef (23, 29)
                    |-Identifier [name=c] (23, 29)
                    |-BinaryExpr [opcode='+'] (23, 31)
                      |-BinaryExpr [opcode='*'] (23, 31)
                        |-VarExpr (23, 31)
                          |-VarRef (23, 31)
                            |-Identifier [name=x1] (23, 31)
                        |-VarExpr (23, 36)
                          |-VarRef (23, 36)
                            |-Identifier [name=N] (23, 36)
                      |-VarExpr (23, 40)
                        |-VarRef (23, 40)
                          |-Identifier [name=y1] (23, 40)
                |-VarExpr (23, 46)
                  |-VarRef (23, 46)
                    |-Identifier [name=mark] (23, 46)
|-FuncDecl [hasBody=1] (27, 0)
  |-TypeReference: [val=void] (27, 0)
  |-Identifier [name=search] (27, 5)
  |-Parameter (27, 12)
    |-TypeReference: [val=int] (27, 12)
    |-Identifier [name=k] (27, 16)
  |-ScopeStatement (27, 19)
    |-VarDecl (28, 4)
      |-TypeReference: [val=int] (28, 4)
      |-VarRef (28, 8)
        |-Identifier [name=i] (28, 8)
    |-IfStmt (29, 4)
      |-BinaryExpr [opcode='=='] (29, 8)
        |-VarExpr (29, 8)
          |-VarRef (29, 8)
            |-Identifier [name=k] (29, 8)
        |-VarExpr (29, 13)
          |-VarRef (29, 13)
            |-Identifier [name=N] (29, 13)
      |-ScopeStatement (29, 16)
        |-ForStmt (30, 8)
          |-AssignmentExpr (30, 13)
            |-VarRef (30, 13)
              |-Identifier [name=i] (30, 13)
            |-IntLiteralExpr [val=0] (30, 17)
          |-BinaryExpr [opcode='<'] (30, 20)
            |-VarExpr (30, 20)
              |-VarRef (30, 20)
                |-Identifier [name=i] (30, 20)
            |-VarExpr (30, 24)
              |-VarRef (30, 24)
                |-Identifier [name=N] (30, 24)
          |-AssignmentExpr (30, 27)
            |-VarRef (30, 27)
              |-Identifier [name=i] (30, 27)
            |-BinaryExpr [opcode='+'] (30, 31)
              |-VarExpr (30, 31)
                |-VarRef (30, 31)
                  |-Identifier [name=i] (30, 31)
              |-IntLiteralExpr [val=1] (30, 35)
          |-ExprStmt (31, 12)
            |-CallExpr (31, 12)
              |-Identifier [name=putint] (31, 12)
              |-VarExpr (31, 19)
                |-VarRef (31, 19)
                  |-Identifier [name=a] (31, 19)
                  |-VarExpr (31, 21)
                    |-VarRef (31, 21)
                      |-Identifier [name=i] (31, 21)
        |-ExprStmt (32, 8)
          |-CallExpr (32, 8)
            |-Identifier [name=putnewline] (32, 8)
        |-ReturnStmt (33, 8)
    |-ForStmt (35, 4)
      |-AssignmentExpr (35, 9)
        |-VarRef (35, 9)
          |-Identifier [name=i] (35, 9)
        |-IntLiteralExpr [val=0] (35, 13)
      |-BinaryExpr [opcode='<'] (35, 16)
        |-VarExpr (35, 16)
          |-VarRef (35, 16)
            |-Identifier [name=i] (35, 16)
        |-VarExpr (35, 20)
          |-VarRef (35, 20)
            |-Identifier [name=N] (35, 20)
      |-AssignmentExpr (35, 23)
        |-VarRef (35, 23)
          |-Identifier [name=i] (35, 23)
        |-BinaryExpr [opcode='+'] (35, 27)
          |-VarExpr (35, 27)
            |-VarRef (35, 27)
              |-Identifier [name=i] (35, 27)
          |-IntLiteralExpr [val=1] (35, 31)
      |-IfStmt (36, 8)
        |-BinaryExpr [opcode='=='] (36, 12)
          |-VarExpr (36, 12)
            |-VarRef (36, 12)
              |-Identifier [name=c] (36, 12)
              |-BinaryExpr [opcode='+'] (36, 14)
                |-BinaryExpr [opcode='*'] (36, 14)
                  |-VarExpr (36, 14)
                    |-VarRef (36, 14)
                      |-Identifier [name=k] (36, 14)
                  |-VarExpr (36, 18)
                    |-VarRef (36, 18)
                      |-Identifier [name=N] (36, 18)
                |-VarExpr (36, 22)
                  |-VarRef (36, 22)
                    |-Identifier [name=i] (36, 22)
          |-IntLiteralExpr [val=0] (36, 28)
        |-ScopeStatement (36, 31)
          |-ExprStmt (37, 12)
            |-CallExpr (37, 12)
              |-Identifier [name=markcolumn] (37, 12)
              |-VarExpr (37, 23)
                |-VarRef (37, 23)
                  |-Identifier [name=k] (37, 23)
              |-VarExpr (37, 26)
                |-VarRef (37, 26)
                  |-Identifier [name=i] (37, 26)
              |-IntLiteralExpr [val=1] (37, 29)
          |-ExprStmt (38, 12)
            |-CallExpr (38, 12)
              |-Identifier [name=markdiag] (38, 12)
              |-VarExpr (38, 21)
                |-VarRef (38, 21)
                  |-Identifier [name=k] (38, 21)
              |-VarExpr (38, 24)
                |-VarRef (38, 24)
                  |-Identifier [name=i] (38, 24)
              |-IntLiteralExpr [val=1] (38, 27)
          |-ExprStmt (39, 12)
            |-AssignmentExpr (39, 12)
              |-VarRef (39, 12)
                |-Identifier [name=a] (39, 12)
                |-VarExpr (39, 14)
                  |-VarRef (39, 14)
                    |-Identifier [name=k] (39, 14)
              |-VarExpr (39, 19)
                |-VarRef (39, 19)
                  |-Identifier [name=i] (39, 19)
          |-ExprStmt (40, 12)
            |-CallExpr (40, 12)
              |-Identifier [name=search] (40, 12)
              |-BinaryExpr [opcode='+'] (40, 19)
                |-VarExpr (40, 19)
                  |-VarRef (40, 19)
                    |-Identifier [name=k] (40, 19)
                |-IntLiteralExpr [val=1] (40, 23)
          |-ExprStmt (41, 12)
            |-CallExpr (41, 12)
              |-Identifier [name=markdiag] (41, 12)
              |-VarExpr (41, 21)
                |-VarRef (41, 21)
                  |-Identifier [name=k] (41, 21)
              |-VarExpr (41, 24)
                |-VarRef (41, 24)
                  |-Identifier [name=i] (41, 24)
              |-UnaryExpr [opcode='-'] (41, 27)
                |-IntLiteralExpr [val=1] (41, 27)
          |-ExprStmt (42, 12)
            |-CallExpr (42, 12)
              |-Identifier [name=markcolumn] (42, 12)
              |-VarExpr (42, 23)
                |-VarRef (42, 23)
                  |-Identifier [name=k] (42, 23)
              |-VarExpr (42, 26)
                |-VarRef (42, 26)
                  |-Identifier [name=i] (42, 26)
              |-UnaryExpr [opcode='-'] (42, 29)
                |-IntLiteralExpr [val=1] (42, 29)
|-FuncDecl [hasBody=1] (46, 0)
  |-TypeReference: [val=int] (46, 0)
  |-Identifier [name=main] (46, 4)
  |-ScopeStatement (46, 11)
    |-VarDecl (47, 4)
      |-TypeReference: [val=int] (47, 4)
      |-VarRef (47, 8)
        |-Identifier [name=i] (47, 8)
    |-ExprStmt (48, 4)
      |-AssignmentExpr (48, 4)
        |-VarRef (48, 4)
          |-Identifier [name=N] (48, 4)
        |-CallExpr (48, 8)
          |-Identifier [name=getint] (48, 8)
    |-ForStmt (49, 4)
      |-AssignmentExpr (49, 9)
        |-VarRef (49, 9)
          |-Identifier [name=i] (49, 9)
        |-IntLiteralExpr [val=0] (49, 13)
      |-BinaryExpr [opcode='<'] (49, 16)
        |-VarExpr (49, 16)
          |-VarRef (49, 16)
            |-Identifier [name=i] (49, 16)
        |-BinaryExpr [opcode='*'] (49, 20)
          |-VarExpr (49, 20)
            |-VarRef (49, 20)
              |-Identifier [name=N] (49, 20)
          |-VarExpr (49, 24)
            |-VarRef (49, 24)
              |-Identifier [name=N] (49, 24)
      |-AssignmentExpr (49, 27)
        |-VarRef (49, 27)
          |-Identifier [name=i] (49, 27)
        |-BinaryExpr [opcode='+'] (49, 31)
          |-VarExpr (49, 31)
            |-VarRef (49, 31)
              |-Identifier [name=i] (49, 31)
          |-IntLiteralExpr [val=1] (49, 35)
      |-ExprStmt (50, 8)
        |-AssignmentExpr (50, 8)
          |-VarRef (50, 8)
            |-Identifier [name=c] (50, 8)
            |-VarExpr (50, 10)
              |-VarRef (50, 10)
                |-Identifier [name=i] (50, 10)
          |-IntLiteralExpr [val=0] (50, 15)
    |-ExprStmt (51, 4)
      |-CallExpr (51, 4)
        |-Identifier [name=search] (51, 4)
        |-IntLiteralExpr [val=0] (51, 11)
    |-ReturnStmt (52, 4)
      |-IntLiteralExpr [val=0] (52, 11)
